[
  {
    "title": "深入分析Condition的await和signal原理",
    "description": "任何一个java对象都天然继承于Object类，在线程间实现通信往往会应用到Object的几个方法，比如wait(),wait(long timeout),wait(long timeout, int nanos)与notify(),notifyAll()几个方法实现等待/通知机制，同样...",
    "url": "https://segmentfault.com/a/1190000020169683",
    "author": "404p",
    "home_url": "https://segmentfault.com/u/404p",
    "votes": "1",
    "rank": 1
  },
  {
    "title": "5个 JS 解构有趣的用途",
    "description": "为了保证的可读性，本文采用意译而非直译。 想阅读更多优质文章请猛戳GitHub博客,一年百来篇优质文章等着你！ 1. 交换变量 通常交换两个变量的方法需要一个额外的临时变量,来看看例子： {代码...} temp是一个临时...",
    "url": "https://segmentfault.com/a/1190000020125752",
    "author": "前端小智",
    "home_url": "https://segmentfault.com/u/minnanitkong",
    "votes": "17",
    "rank": 2
  },
  {
    "title": "用一道大厂面试题带你搞懂事件循环机制",
    "description": "本文涵盖 面试题的引入 对事件循环面试题执行顺序的一些疑问 通过面试题对微任务、事件循环、定时器等对深入理解 结论总结 面试题 面试题如下，大家可以先试着写一下输出结果，然后再看我下面的详细讲解，看看会...",
    "url": "https://segmentfault.com/a/1190000020159229",
    "author": "koala",
    "home_url": "https://segmentfault.com/u/na_5a545653c24d9",
    "votes": "17",
    "rank": 3
  },
  {
    "title": "一次数据库连接池优化的实践剖析",
    "description": "一段时间以来，XXX 部门开放平台 OPENXXX 系统在业务高峰频繁出现 MySQL 线程数升高的现象。升高本身不是问题，问题是随着业务高峰过去，QPS 下来后 ，MySQL 线程数却依然居高不下，这是什么原因？",
    "url": "https://segmentfault.com/a/1190000020162800",
    "author": "阿哲",
    "home_url": "https://segmentfault.com/u/ialan",
    "votes": "3",
    "rank": 4
  },
  {
    "title": "进入 CSS3 动画",
    "description": "我最近有机会深入研究一些CSS3动画。 我使用了像animate.css这样的库，用javascript完成了动画，但从未做过任何自定义的CSS3工作 原文",
    "url": "https://segmentfault.com/a/1190000020163363",
    "author": "easyhappy",
    "home_url": "https://segmentfault.com/u/easyhappy",
    "votes": "4",
    "rank": 5
  },
  {
    "title": "JavaScript之柯里化",
    "description": "柯里化(Currying)，又称部分求值(Partial Evaluation)，是把接收多个参数的函数变成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受剩余的参数而且返回结果的新函数的技术。",
    "url": "https://segmentfault.com/a/1190000020158274",
    "author": "Clearlove",
    "home_url": "https://segmentfault.com/u/clearlove07",
    "votes": "10",
    "rank": 6
  },
  {
    "title": "ssh key类型这么多，要如何选择呢？",
    "description": "用过ssh的朋友都知道，ssh key的类型有很多种，比如dsa、rsa、 ecdsa、ed25519等，那这么多种类型，我们要如何选择呢？",
    "url": "https://segmentfault.com/a/1190000020166520",
    "author": "wangyuntao",
    "home_url": "https://segmentfault.com/u/wangyuntao",
    "votes": "1",
    "rank": 7
  },
  {
    "title": "聊聊我在这家公司设计的SSO",
    "description": "最近小明遇到一个需求：需要将几个独立的系统（子系统）汇总到一个集中的系统（父系统）当中，当用户在父系统登录过后，再点击这几个子系统，就可以免登录跳转到任意一个系统。当时一听，duang~duang~就有很多方...",
    "url": "https://segmentfault.com/a/1190000020161626",
    "author": "程序员小明",
    "home_url": "https://segmentfault.com/u/chengxuyuanxiaoming_5d1d94f78ffaa",
    "votes": "3",
    "rank": 8
  },
  {
    "title": "canvas之转盘抽奖",
    "description": "由于业务需要所以开发了两个版本抽奖，dom和canvas，不过editor.js部分只能替换图片，没有功能逻辑。",
    "url": "https://segmentfault.com/a/1190000020165551",
    "author": "王明",
    "home_url": "https://segmentfault.com/u/wangming_5871ba9bb0659",
    "votes": "3",
    "rank": 9
  },
  {
    "title": "【JVM从小白学成大佬】3.深入解析强引用、软引用、弱引用、幻象引用",
    "description": "关于强引用、软引用、弱引用、幻象引用的区别，在很多公司的面试题中经常出现，可能有些小伙伴觉得这个知识点比较冷门，但其实大家在开发中经常用到，如new一个对象的时候就是强引用的应用。",
    "url": "https://segmentfault.com/a/1190000020161447",
    "author": "猿人谷",
    "home_url": "https://segmentfault.com/u/yuanrengu",
    "votes": "2",
    "rank": 10
  },
  {
    "title": "16 天直达就业 | 思否 x 来也 「RPA 工程师就业班」火热招生中...",
    "description": "你的选择决定了你是 被同龄人抛弃 or 抛弃同龄人 👇👇 三个月后…… RPA 机器人流程自动化 是时下人工智能领域 需求量最大的技术之一 各部委分别出台政策 人工智能已上升至国家战略 2019 人社部 13 个新职业，人工智...",
    "url": "https://segmentfault.com/a/1190000020162953",
    "author": "思否小姐姐",
    "home_url": "https://segmentfault.com/u/sfxiaojiejie",
    "votes": "3",
    "rank": 11
  },
  {
    "title": "【FE TIKU 前端面试题库】性能优化",
    "description": "本文首发 [链接] 1 DNS 预解析 DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP {代码...} 2 缓存 缓存对于前端性能优化来说是个很重要的点，良好的缓存策略可以降低资源的重复加载提高...",
    "url": "https://segmentfault.com/a/1190000020163409",
    "author": "gitfe",
    "home_url": "https://segmentfault.com/u/gitfe",
    "votes": "2",
    "rank": 12
  },
  {
    "title": "vue项目中使用element-ui下拉框选项值为对象时报错",
    "description": "在做后台管理时，使用了vue搭配elementUI，请求方法使用了axios插件，在使用下拉框时，因为我需要获取选中的选项中的其他值，因此需要传入对象。对select下拉框的文档没有读的很仔细，百度过几篇文章，也没有理解...",
    "url": "https://segmentfault.com/a/1190000020160813",
    "author": "ZJW0215",
    "home_url": "https://segmentfault.com/u/zjw0215",
    "votes": "2",
    "rank": 13
  },
  {
    "title": "12种开源Web安全扫描程序",
    "description": "Arachni是一款基于Ruby框架构建的高性能安全扫描程序，适用于现代Web应用程序。它可用于Mac，Windows和Linux的便携式二进制文件",
    "url": "https://segmentfault.com/a/1190000020166648",
    "author": "断舍离",
    "home_url": "https://segmentfault.com/u/breakdown",
    "votes": "1",
    "rank": 14
  },
  {
    "title": "从TypeScript中的类中派生接口",
    "description": "大多数面向对象编程语言都鼓励编程到接口的模式。 TypeScript 当然支持这一点，你可以创建一个或多个接口，然后再定义生成这个接口实例的类（或工厂）。",
    "url": "https://segmentfault.com/a/1190000020162001",
    "author": "疯狂的技术宅",
    "home_url": "https://segmentfault.com/u/evilboy",
    "votes": "2",
    "rank": 15
  },
  {
    "title": "Android 8.0以上系统应用如何保活",
    "description": "最近在做一个埋点的sdk，由于埋点是分批上传的，不是每次都上传，所以会有个进程保活的机制，这也是自研推送的实现技术之一：如何保证Android进程的存活。",
    "url": "https://segmentfault.com/a/1190000020159573",
    "author": "xiangzhihong",
    "home_url": "https://segmentfault.com/u/xiangzhihong",
    "votes": "1",
    "rank": 16
  },
  {
    "title": "Vue源码之Vue实例初始化",
    "description": "这一节主要记录一下：Vue 的初始化过程 以下正式开始： Vue官网的生命周期图示表 重点说一下 new Vue()后的初始化阶段，也就是created之前发生了什么。 initLifecycle 阶段 {代码...} 接下来是initEvents 阶段 {...",
    "url": "https://segmentfault.com/a/1190000020169846",
    "author": "shisanOnly",
    "home_url": "https://segmentfault.com/u/shisanonly",
    "votes": "1",
    "rank": 17
  },
  {
    "title": "阿里云搭建SS代理教程",
    "description": "二.搭建服务器 东西准备齐全我们就开始搭建服务器啦 1.使用root用户，分别执行以下3条命令$ wget --no-check-certificate -O shadowsocks-all.sh [链接]$ chmod +x shadowsocks-all.sh$ ./shadowsocks-all.sh 2&g...",
    "url": "https://segmentfault.com/a/1190000020163989",
    "author": "杨巍",
    "home_url": "https://segmentfault.com/u/yangwei_5d1433a0a959a",
    "votes": "0",
    "rank": 18
  },
  {
    "title": "Java内存缓存-通过Map定制简单缓存",
    "description": "在程序中，缓存是一个高速数据存储层，其中存储了数据子集，且通常是短暂性存储，这样日后再次请求此数据时，速度要比访问数据的主存储位置快。通过缓存，可以高效地重用之前检索或计算的数据。",
    "url": "https://segmentfault.com/a/1190000020162914",
    "author": "小码农薛尧",
    "home_url": "https://segmentfault.com/u/flowstone",
    "votes": "1",
    "rank": 19
  },
  {
    "title": "Kafka监控工具汇总",
    "description": "对于大数据集群来说，监控功能是非常必要的，通过日志判断故障低效，我们需要完整的指标来帮我们管理Kafka集群。本文讨论Kafka的监控以及一些常用的第三方监控工具。",
    "url": "https://segmentfault.com/a/1190000020162665",
    "author": "实时计算",
    "home_url": "https://segmentfault.com/u/shishijisuan",
    "votes": "1",
    "rank": 20
  },
  {
    "title": "NestJs学习之旅(4)——中间件",
    "description": "使用过koa和express的朋友应该知道，中间件是一个很核心的功能，尤其是koa，核心就是中间件，连路由功能都是由中间件提供的。",
    "url": "https://segmentfault.com/a/1190000020161858",
    "author": "xialeistudio",
    "home_url": "https://segmentfault.com/u/xialeistudio",
    "votes": "1",
    "rank": 21
  },
  {
    "title": "Kerberos搭建（基于Ambari环境）",
    "description": "安装 yum install krb5-server krb5-libs krb5-workstation",
    "url": "https://segmentfault.com/a/1190000020160206",
    "author": "小鸡",
    "home_url": "https://segmentfault.com/u/be_coding",
    "votes": "1",
    "rank": 22
  },
  {
    "title": "基于注解的SpringAOP源码解析（三）",
    "description": "在之前的2篇文章：AOP源码分析（一）AOP源码分析（二）中，我们搭建了SpringAOP源码分析的环境，介绍了@EnableAspectJAutoProxy注解和postProcessBeforeInstantiation方法是如何加载所有增强的。本篇文章则将描述...",
    "url": "https://segmentfault.com/a/1190000020159898",
    "author": "Java学习录",
    "home_url": "https://segmentfault.com/u/shiyujun",
    "votes": "1",
    "rank": 23
  },
  {
    "title": "php算法题：7整数反转",
    "description": "7.整数反转 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 示例 1: {代码...} 示例 2: {代码...} 示例 3: {代码...} 一、 思路： 首先按照取余，和除的方式，来反转整数int。但是有一个...",
    "url": "https://segmentfault.com/a/1190000020158519",
    "author": "iMine",
    "home_url": "https://segmentfault.com/u/imine",
    "votes": "0",
    "rank": 24
  },
  {
    "title": "mysql 存储过程",
    "description": "SQL语句需要先编译然后执行，而存储过程（Stored Procedure）是一组为了完成特定功能的SQL语句集，经编译后存储在数据库中，用户通过指定存储过程的名字并给定参数（如果该存储过程带有参数）来调用执行它。",
    "url": "https://segmentfault.com/a/1190000020158118",
    "author": "拥之则安",
    "home_url": "https://segmentfault.com/u/yongzhizean_5b46f92670786",
    "votes": "1",
    "rank": 25
  }
]