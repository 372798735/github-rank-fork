[
  {
    "title": "【译】使用 React，TypeScript 和 Webpack 开始一个项目",
    "description": "我会通过这篇文章，为大家讲述，如何使用 React，TypeScript 和 Webpack 来构建一个项目。",
    "url": "https://segmentfault.com/a/1190000019489612",
    "author": "joking_zhang",
    "home_url": "https://segmentfault.com/u/joking_zhang",
    "votes": "3",
    "rank": 1
  },
  {
    "title": "重构的基本认知",
    "description": "代码不可能在第一次就写得完美，这是一个持续修改的过程，那么应该怎么来进行呢？以下内容来自《重构-改善既有代码的设计》",
    "url": "https://segmentfault.com/a/1190000019489667",
    "author": "桃源小盼",
    "home_url": "https://segmentfault.com/u/tyxp",
    "votes": "1",
    "rank": 2
  },
  {
    "title": "强烈推荐 GitHub 上值得前端学习的开源实战项目",
    "description": "强烈推荐 GitHub 上值得前端学习的开源实战项目。 Vue.js vue-element-admin 是一个后台前端解决方案，它基于和 element-ui 实现 基于 iView 的 Vue 2.0 管理系统模板 基于 vue2 + vuex 构建一个具有 45 个页面的...",
    "url": "https://segmentfault.com/a/1190000019488576",
    "author": "夜尽天明",
    "home_url": "https://segmentfault.com/u/biaochenxuying",
    "votes": "14",
    "rank": 3
  },
  {
    "title": "最简单的vue消息提示全局组件",
    "description": "简介 实现功能 自定义文本 自定义类型(默认，消息，成功，警告，危险) 自定义过渡时间 使用vue-cli3.0生成项目 toast全局组件编写 /src/toast/toast.vue {代码...} /src/toast/index.js {代码...} 全局注册 /main...",
    "url": "https://segmentfault.com/a/1190000019487630",
    "author": "渣渣辉",
    "home_url": "https://segmentfault.com/u/linxi_59223381a31e3",
    "votes": "7",
    "rank": 4
  },
  {
    "title": "使用Node.js爬取任意网页资源并输出高质量PDF文件到本地~",
    "description": "本文适合无论是否有爬虫以及Node.js基础的朋友观看~ 需求： 使用Node.js爬取网页资源，开箱即用的配置 将爬取到的网页内容以PDF格式输出 如果你是一名技术人员，那么可以看我接下来的文章，否则，请直接移步到我...",
    "url": "https://segmentfault.com/a/1190000019485560",
    "author": "Peter谭金杰",
    "home_url": "https://segmentfault.com/u/jerrytanjinjie",
    "votes": "15",
    "rank": 5
  },
  {
    "title": "vue微信网页授权最终解决方案",
    "description": "vue微信网页授权，基于vue-cli3.0+webpack 4+vant ui + sass+ rem适配方案+axios，开发的微信授权方案。项目地址：vue-wechat-auth",
    "url": "https://segmentfault.com/a/1190000019488056",
    "author": "乖摸摸头",
    "home_url": "https://segmentfault.com/u/silent_songs",
    "votes": "3",
    "rank": 6
  },
  {
    "title": "LeetCode44.通配符匹配 JavaScript",
    "description": "'?' 可以匹配任何单个字符。 '*' 可以匹配任意字符串（包括空字符串）。 两个字符串完全匹配才算匹配成功。",
    "url": "https://segmentfault.com/a/1190000019486910",
    "author": "LHH大翰仔仔",
    "home_url": "https://segmentfault.com/u/lhhli",
    "votes": "2",
    "rank": 7
  },
  {
    "title": "大话-URL和URI的区别和联系",
    "description": "2019年6月15日，菜鸟坐在电脑桌前，喝着咖啡，唱着歌，心情大美。写了一个博客《程序员的前世与今生》。正巧，大鸟从他身边路过，猫了一眼，觉得不错，就跟菜鸟说：“菜鸟，写的不错吗，把URI给我分享一下，同乐同...",
    "url": "https://segmentfault.com/a/1190000019487884",
    "author": "高志鹏",
    "home_url": "https://segmentfault.com/u/gaozhipeng",
    "votes": "1",
    "rank": 8
  },
  {
    "title": "Spring 里那么多种 CORS 的配置方式，到底有什么区别",
    "description": "作为一个后端开发，我们经常遇到的一个问题就是需要配置 CORS，好让我们的前端能够访问到我们的 API，并且不让其他人访问。而在 Spring 中，我们见过很多种 CORS 的配置，很多资料都只是告诉我们可以这样配置、可...",
    "url": "https://segmentfault.com/a/1190000019485883",
    "author": "kbyyd24",
    "home_url": "https://segmentfault.com/u/kbyyd24",
    "votes": "3",
    "rank": 9
  },
  {
    "title": "Vue源码浅析之异步组件注册",
    "description": "Vue的异步组件注册 Vue官方文档提供注册异步组件的方式有三种: 工厂函数执行 resolve 回调 工厂函数中返回Promise 工厂函数返回一个配置化组件对象 工厂函数执行 resolve 回调 我们看下 Vue 官方文档提供的示例: ...",
    "url": "https://segmentfault.com/a/1190000019485927",
    "author": "lgybetter",
    "home_url": "https://segmentfault.com/u/lgybetter",
    "votes": "1",
    "rank": 10
  },
  {
    "title": "线程池原理浅析",
    "description": "为了避免频繁重复的创建和销毁线程，我们可以让这些线程进行复用，在线程池中，总会有活跃的线程在占用，但是线程池中也会存在没有占用的线程，这些线程处于空闲状态，当有任务的时候会从池子里面拿去一个线程来...",
    "url": "https://segmentfault.com/a/1190000019488729",
    "author": "BattleHeart",
    "home_url": "https://segmentfault.com/u/battleheart",
    "votes": "1",
    "rank": 11
  },
  {
    "title": "Base64 编码与解码详解",
    "description": "Base64 是基于 64 个可打印字符 A-Z、a-z、0-9、+、/ 来表示二进制数据的表示方法，常用于数据在网络中的传输。本篇将分别介绍其编码、解码以及实际运用。",
    "url": "https://segmentfault.com/a/1190000019488308",
    "author": "珊瑚月",
    "home_url": "https://segmentfault.com/u/shanhuyue",
    "votes": "2",
    "rank": 12
  },
  {
    "title": "性能测试解读",
    "description": "项目越做越大，用户量和请数量可能随时发生井喷，如果等到系统崩溃时再补救，损失可就大了，所以得想个办法提前预防。",
    "url": "https://segmentfault.com/a/1190000019485342",
    "author": "平也",
    "home_url": "https://segmentfault.com/u/icoder_club",
    "votes": "2",
    "rank": 13
  }
]