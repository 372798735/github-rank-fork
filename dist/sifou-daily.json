[
  {
    "title": "Vue+Express全栈购物商城",
    "description": "基于Vue-CLI2.0:点我查看这个分支版本是一两年前的，基于Vue-CLI2.0写的，数据请求是Mock，纯前端的项目。",
    "url": "https://segmentfault.com/a/1190000019221113",
    "author": "czero1995",
    "home_url": "https://segmentfault.com/u/czero1995",
    "votes": "7",
    "rank": 1
  },
  {
    "title": "实战Go内存泄露",
    "description": "最近解决了我们项目中的一个内存泄露问题，事实再次证明pprof是一个好工具，但掌握好工具的正确用法，才能发挥好工具的威力，不然就算你手里有屠龙刀，也成不了天下第一，本文就是带你用pprof定位内存泄露问题。",
    "url": "https://segmentfault.com/a/1190000019222661",
    "author": "大彬",
    "home_url": "https://segmentfault.com/u/lessisbetter",
    "votes": "1",
    "rank": 2
  },
  {
    "title": "前端开发玩转 win10 linux 子系统",
    "description": "最新版 win10 已经加入了 linux 子系统功能，尝试后一周的开发后，个人感觉已经完全可以取代 macos 了，linux 环境下终端工具易用性、环境稳定性与 win10 的海量的软件相结合，再看看 PC 电脑的选择宽泛性，简直...",
    "url": "https://segmentfault.com/a/1190000019220736",
    "author": "胡大大牛",
    "home_url": "https://segmentfault.com/u/hudadaniu",
    "votes": "2",
    "rank": 3
  },
  {
    "title": "Redux总结",
    "description": "React是一个视图层框架，需要配合Redux来实现复杂页面的渲染。一、安装Redux：npm add redux /npm install redux二、创建store：利用Redux的createStore()方法创建并导出store三、创建reducer数据：",
    "url": "https://segmentfault.com/a/1190000019221668",
    "author": "RoseMe",
    "home_url": "https://segmentfault.com/u/roseme",
    "votes": "1",
    "rank": 4
  },
  {
    "title": "前后端分离之更好的mock你的后端api",
    "description": "在一个web应用的开发周期中, 一般前端与后端都是并行开发的, 各自完成自己的开发工作后进行联调, 联调通过再进行提测/发布.",
    "url": "https://segmentfault.com/a/1190000019218003",
    "author": "funkyLover",
    "home_url": "https://segmentfault.com/u/funkylover",
    "votes": "11",
    "rank": 5
  },
  {
    "title": "4种极大提升学习效率的工具",
    "description": "近段时间发现身边很多人都在用TUDO List，但是我觉得TUDO List的效率还是不够高，所以就写一下提升学习效率的工具。",
    "url": "https://segmentfault.com/a/1190000019221972",
    "author": "cartoon",
    "home_url": "https://segmentfault.com/u/cartoon_5cce2e0fb8fae",
    "votes": "1",
    "rank": 6
  },
  {
    "title": "WebSocket实战：在 Node 和 React 之间进行实时通信",
    "description": "Web 为了支持客户端和服务器之间的全双工（或双向）通信已经走过了很长的路。这是 WebSocket 协议的主要目的：通过单个 TCP 套接字连接在客户端和服务器之间提供持久的实时通信。",
    "url": "https://segmentfault.com/a/1190000019216390",
    "author": "疯狂的技术宅",
    "home_url": "https://segmentfault.com/u/evilboy",
    "votes": "7",
    "rank": 7
  },
  {
    "title": "🛠如何快速开发一个自己的项目脚手架？",
    "description": "随着前端工程化的理念不断深入，越来越多的人选择使用脚手架来从零到一搭建自己的项目。其中大家最熟悉的就是create-react-app和vue-cli，它们可以帮助我们初始化配置、生成项目结构、自动安装依赖，最后我们一行...",
    "url": "https://segmentfault.com/a/1190000019219648",
    "author": "alienzhou",
    "home_url": "https://segmentfault.com/u/alienzhou",
    "votes": "5",
    "rank": 8
  },
  {
    "title": "SQL 行转列，列转行",
    "description": "SQL 行转列，列转行 行列转换在做报表分析时还是经常会遇到的，今天就说一下如何实现行列转换吧。 行列转换就是如下图所示两种展示形式的互相转换 行转列 假如我们有下表： {代码...} 通过上面 SQL 语句即可得到...",
    "url": "https://segmentfault.com/a/1190000019220759",
    "author": "李英杰同学",
    "home_url": "https://segmentfault.com/u/abcde",
    "votes": "3",
    "rank": 9
  },
  {
    "title": "Java设计模式综合运用(动态代理+Spring AOP)",
    "description": "AOP设计模式通常运用在日志，校验等业务场景，本文将简单介绍基于Spring的AOP代理模式的运用。",
    "url": "https://segmentfault.com/a/1190000019219626",
    "author": "landy8530",
    "home_url": "https://segmentfault.com/u/landy8530",
    "votes": "2",
    "rank": 10
  },
  {
    "title": "Java设计模式综合运用(门面+模版方法+责任链+策略)",
    "description": "引言：很久没有更新了，主要是工作忙。最近，工作中一个子系统升级，把之前不易扩展的缺点给改进了一下，主要是运用了几个设计模式进行稍微改造了一下。本文也同步发布至简书，地址： [链接]",
    "url": "https://segmentfault.com/a/1190000019219562",
    "author": "landy8530",
    "home_url": "https://segmentfault.com/u/landy8530",
    "votes": "2",
    "rank": 11
  },
  {
    "title": "Java 设计模式综合运用(门面+模版方法+责任链+策略+工厂方法)",
    "description": "在上一篇文章Java设计模式综合运用(门面+模版方法+责任链+策略)中，笔者写了一篇门面模式、模版方法、责任链跟策略模式的综合运用的事例文章，但是后来笔者发现，在实现策略模式的实现上，发现了一个弊端：那就是...",
    "url": "https://segmentfault.com/a/1190000019219604",
    "author": "landy8530",
    "home_url": "https://segmentfault.com/u/landy8530",
    "votes": "1",
    "rank": 12
  },
  {
    "title": "Angular 架构设计",
    "description": "引言 Alice测试上线，发现包体积太大，加载太慢。决定启用懒加载与预加载加速加载速度。 整三天，课也没去上。改得时候特别痛苦，哭了，为什么没有早点发现惰性加载这个东西。 星期一，重新设计前台架构，重构前...",
    "url": "https://segmentfault.com/a/1190000019218193",
    "author": "张喜硕",
    "home_url": "https://segmentfault.com/u/zhangxishuo",
    "votes": "2",
    "rank": 13
  },
  {
    "title": "基于2PC和延迟更新完成分布式消息队列多条事务Golang版本",
    "description": "在消息队列使用场景中，有时需要同时下发多条消息，但现在的消息队列比如kafka只支持单条消息的事务保证，不能保证多条消息，今天说的这个方案就时kafka内部的一个子项目中基于2PC和延迟更新来实现分布式事务",
    "url": "https://segmentfault.com/a/1190000019219321",
    "author": "仔仔",
    "home_url": "https://segmentfault.com/u/zizi_59381996d7b04",
    "votes": "1",
    "rank": 14
  },
  {
    "title": "Python数据结构",
    "description": "数据结构是组织数据的方式，以便能够更好的存储和获取数据。数据结构定义数据之间的关系和对这些数据的操作方式。数据结构屏蔽了数据存储和操作的细节，让程序员能更好的处理业务逻辑，同时拥有快速的数据存储和...",
    "url": "https://segmentfault.com/a/1190000019219028",
    "author": "xiaochao",
    "home_url": "https://segmentfault.com/u/xiaochao",
    "votes": "2",
    "rank": 15
  },
  {
    "title": "webpack 代码分离快速指北",
    "description": "在此之前，首先要知道经常配置的 output 中有关 filename 和 chunkFilename 的区别；简单来说在 entry 定义的入口文件走的就是 filename 配置项，在入口文件内部引入的通常情况下是 chunk，走 chunkFilename 的配置",
    "url": "https://segmentfault.com/a/1190000019218713",
    "author": "JS菌",
    "home_url": "https://segmentfault.com/u/billyangg",
    "votes": "1",
    "rank": 16
  },
  {
    "title": "OpenCV搞定腾讯滑块验证码",
    "description": "废话滑块验证码破解是一直都想搞的项目，毕竟多数网站都会采用滑块验证码，于是最近在修改论文的闲暇之余把这事儿给解决了。要搞现在的滑块验证码绕不开图像处理，图像处理当然是首推OpenCV-Python啦！当然我的Op...",
    "url": "https://segmentfault.com/a/1190000019218588",
    "author": "1treeS",
    "home_url": "https://segmentfault.com/u/1trees",
    "votes": "2",
    "rank": 17
  },
  {
    "title": "golang多版本管理器",
    "description": "g是一个Linux、macOS、Windows下的命令行工具，可以提供一个便捷的多版本go环境的管理和切换。",
    "url": "https://segmentfault.com/a/1190000019218168",
    "author": "voidint",
    "home_url": "https://segmentfault.com/u/voidint",
    "votes": "1",
    "rank": 18
  },
  {
    "title": "【Node】搭建一个静态资源服务器",
    "description": "使用 Node 的内置模块，创建一个可以访问目录的静态资源服务器，支持fs文件读取，资源压缩与缓存等。",
    "url": "https://segmentfault.com/a/1190000019222794",
    "author": "JennyTong",
    "home_url": "https://segmentfault.com/u/jennytong",
    "votes": "1",
    "rank": 19
  },
  {
    "title": "一个mysql死锁场景分析",
    "description": "最近遇到一个mysql在RR级别下的死锁问题，感觉有点意思，研究了一下，做个记录。涉及知识点：共享锁、排他锁、意向锁、间隙锁、插入意向锁、锁等待队列",
    "url": "https://segmentfault.com/a/1190000019221604",
    "author": "hbprotoss",
    "home_url": "https://segmentfault.com/u/hbprotoss",
    "votes": "1",
    "rank": 20
  },
  {
    "title": "JS核心知识点梳理——上下文、作用域、闭包、this（上）",
    "description": "满满的干货，面试必bei系列，参考大量资料，并集合自己的理解以及相关的面试题，对JS核心知识点中的作用域、闭包、this、上下文进行了梳理。由于篇幅有限，这里只对我认为最重要的知识做了介绍,一些常识性的东西...",
    "url": "https://segmentfault.com/a/1190000019221593",
    "author": "Runningfyy",
    "home_url": "https://segmentfault.com/u/yangkaiqiang",
    "votes": "1",
    "rank": 21
  }
]